- name: Create consul user
  user:
    name: consul

- name: Installing dependencies
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: "{{ dependencies_pkgs_install }}"

- name: Configuring dnsmasq
  template:
    src: dnsmasq_conf.j2
    dest: /etc/dnsmasq.d/10-consul
    backup: yes
  notify:
    - Restart dnsmasq

- name: Configuring systemd resolved.conf
  template:
    src: systemd_resolved_conf.j2
    dest: /etc/systemd/resolved.conf
    backup: yes
  notify:
    - Restart resolved

- name: Fetching Consul
  get_url:
    url: "{{ consul_download_url }}"
    dest: "{{ consul_zip_path }}"

- name: Installing Consul
  unarchive:
    src: "{{ consul_zip_path }}"
    dest: "{{ consul_bin_path }}"
    mode: 0755
    remote_src: yes

- name: Create consul directories
  file:
    path: "{{ item }}"
    state: directory
    owner: consul
    group: consul
    mode: '0755'
  loop: "{{ consul_directories }}"

- name: Setup Consul
  template:
    src: "{{ (hostvars[inventory_hostname].tags.Name == consul_agent_name_tag) | ternary('consul_agent_config.j2', 'consul_server_config.j2') }}"
    dest: /etc/consul.d/config.json
    owner: consul
    group: consul
    backup: yes
  when:
    - hostvars[inventory_hostname].tags.Name is defined
    - (hostvars[inventory_hostname].tags.Name == consul_agent_name_tag) or (hostvars[inventory_hostname].tags.Name == consul_server_name_tag)

- name: Configure consul service
  template:
    src: consul_service.j2
    dest: /etc/systemd/system/consul.service
    backup: yes
  when:
    - hostvars[inventory_hostname].tags.Name is defined
    - (hostvars[inventory_hostname].tags.Name == consul_agent_name_tag) or (hostvars[inventory_hostname].tags.Name == consul_server_name_tag)
  notify:
    - Start consul



